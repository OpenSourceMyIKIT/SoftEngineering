//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace View.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReturnActiveUser", ReplyAction="http://tempuri.org/IService1/ReturnActiveUserResponse")]
        SharedModel.User ReturnActiveUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReturnActiveUser", ReplyAction="http://tempuri.org/IService1/ReturnActiveUserResponse")]
        System.Threading.Tasks.Task<SharedModel.User> ReturnActiveUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubject", ReplyAction="http://tempuri.org/IService1/GetSubjectResponse")]
        SharedModel.Subject GetSubject();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubject", ReplyAction="http://tempuri.org/IService1/GetSubjectResponse")]
        System.Threading.Tasks.Task<SharedModel.Subject> GetSubjectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetExam", ReplyAction="http://tempuri.org/IService1/SetExamResponse")]
        void SetExam(bool b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetExam", ReplyAction="http://tempuri.org/IService1/SetExamResponse")]
        System.Threading.Tasks.Task SetExamAsync(bool b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        bool Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddSubject", ReplyAction="http://tempuri.org/IService1/AddSubjectResponse")]
        void AddSubject(SharedModel.User user, SharedModel.Subject subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddSubject", ReplyAction="http://tempuri.org/IService1/AddSubjectResponse")]
        System.Threading.Tasks.Task AddSubjectAsync(SharedModel.User user, SharedModel.Subject subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        bool Register(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        ViewModel.ServiceReference1.CompositeType GetDataUsingDataContract(ViewModel.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ViewModel.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(ViewModel.ServiceReference1.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : View.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<View.ServiceReference1.IService1>, View.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SharedModel.User ReturnActiveUser() {
            return base.Channel.ReturnActiveUser();
        }
        
        public System.Threading.Tasks.Task<SharedModel.User> ReturnActiveUserAsync() {
            return base.Channel.ReturnActiveUserAsync();
        }
        
        public SharedModel.Subject GetSubject() {
            return base.Channel.GetSubject();
        }
        
        public System.Threading.Tasks.Task<SharedModel.Subject> GetSubjectAsync() {
            return base.Channel.GetSubjectAsync();
        }
        
        public void SetExam(bool b) {
            base.Channel.SetExam(b);
        }
        
        public System.Threading.Tasks.Task SetExamAsync(bool b) {
            return base.Channel.SetExamAsync(b);
        }
        
        public bool Login(string login1, string password) {
            return base.Channel.Login(login1, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string login, string password) {
            return base.Channel.LoginAsync(login, password);
        }
        
        public void AddSubject(SharedModel.User user, SharedModel.Subject subject) {
            base.Channel.AddSubject(user, subject);
        }
        
        public System.Threading.Tasks.Task AddSubjectAsync(SharedModel.User user, SharedModel.Subject subject) {
            return base.Channel.AddSubjectAsync(user, subject);
        }
        
        public bool Register(string login, string password) {
            return base.Channel.Register(login, password);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string login, string password) {
            return base.Channel.RegisterAsync(login, password);
        }
        
        public ViewModel.ServiceReference1.CompositeType GetDataUsingDataContract(ViewModel.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ViewModel.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(ViewModel.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
