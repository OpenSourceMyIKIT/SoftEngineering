Вариант 17

Task 1

Запишите следующие лямбда-вызовы с использованием формы LET и вычислите их.

a) (let ((x (+ 1 2))(y 'c))(list x y))
b) (let ((x 'a)(y 'b))(let ((z 'c))(list x y z)))
c) (let ((x (let ((z 'a)) z))(y 'b))(list x y))

Task 2

Функция, аргументами которой являются список и число,
должна возвращать элемент списка по заданному номеру, считая от конца.

(defun f(list1 x)(nth (- x 1) (reverse list1)))

Task 3

Напишите с помощью композиции условных выражений функции от четырех аргументов 
AND4 (x1 x2 x3 x4) и OR4(x1 x2 x3 x4), совпадающие с функциями AND и OR от
четырех аргументов.

(defun f(x y z a) 
   (if (and (if x t nil) (if y t nil) (if z t nil) (if a t nil)) t nil)
)
(defun f(x y z a) (cond ((or x y z a) 'true)(T NIL)))

Task 4

С помощью предложений COND или CASE определите функцию, которая возвращает
в качестве значения столицу заданного аргументом государства.

(defun f(country)
	(cond 
	   ((equal country 'England) 'London)
	   ((equal country 'Ukraine) 'Kiev)
	   ((equal country 'Caucasus) 'Moscow)
	)
)

Task 5

Запрограммируйте с помощью предложения DO функцию факториал.

(defun f(x)
   (do ((y 1 (+ y 1))(рез 1))
	((> y x) рез)
	(setq рез (* рез y))
	)
)

Task 6

Запишите с помощью предложения PROG функцию - аналог встроенной функции LENGTH,
которая возвращает в качестве значения длину списка (количество элементов на 
верхнем уровне).

(defun f(mylist)
   (prog (y) 
      (setq y 0)
      metka (if (null (nth y mylist))(return y))
      (setq y (+ y 1))
      (go metka)
   )
)